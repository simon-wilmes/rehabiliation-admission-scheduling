Bootstrap: docker
From: ubuntu:20.04

%post
    export DEBIAN_FRONTEND=noninteractive

    # Set timezone to Europe/Berlin
    echo "tzdata tzdata/Areas select Europe" | debconf-set-selections
    echo "tzdata tzdata/Zones/Europe select Berlin" | debconf-set-selections
    ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime
    apt-get update && apt-get install -y tzdata
    dpkg-reconfigure --frontend noninteractive tzdata

    # Install essential dependencies
    apt-get install -y \
        build-essential \
        curl \
        git \
        libssl-dev \
        zlib1g-dev \
        libbz2-dev \
        libreadline-dev \
        libsqlite3-dev \
        wget \
        llvm \
        libncurses5-dev \
        libncursesw5-dev \
        xz-utils \
        tk-dev \
        libffi-dev \
        liblzma-dev \
        python-openssl \
        libxml2-dev \
        libxslt1-dev \
        qt5-qmake \
        qt5-default

    # Install MiniZinc
    wget https://github.com/MiniZinc/MiniZincIDE/releases/download/2.5.5/MiniZincIDE-2.5.5-bundle-linux-x86_64.tgz
    tar -xzf MiniZincIDE-2.5.5-bundle-linux-x86_64.tgz -C /opt/
    ln -s /opt/MiniZincIDE-2.5.5-bundle-linux-x86_64/bin/* /usr/local/bin/

    # Install CMake 3.20
    # wget https://github.com/Kitware/CMake/releases/download/v3.20.0/cmake-3.20.0.tar.gz
    # tar -zxvf cmake-3.20.0.tar.gz
    # cd cmake-3.20.0
    # ./bootstrap
    # make -j$(nproc)
    # make install
    # cd ..
    # rm -rf cmake-3.20.0 cmake-3.20.0.tar.gz



    # Install OR-Tools
    # git clone https://github.com/google/or-tools.git
    # cd or-tools
    # 
    # cmake -S. -B build -DBUILD_DEPS:BOOL=ON
    # cmake --build build --target install

    # Install Gecode
    # wget https://github.com/Gecode/gecode/archive/refs/tags/release-6.2.0.tar.gz
    # tar -xzf release-6.2.0.tar.gz
    # cd gecode-release-6.2.0
    # mkdir build
    # cd build
    # cmake ..
    # make -j$(nproc)
    # make install
    # cd ../../


    # Install Chuffed
    # git clone https://github.com/chuffed/chuffed.git
    # cd chuffed
    # cmake -B build -S .
    # cmake --build build --target install
    # #cp fzn-chuffed /usr/local/bin/
    # cd ..





    # Install Pyenv
    curl https://pyenv.run | bash

    # Initialize Pyenv
    export PATH="/root/.pyenv/bin:$PATH"
    export PYENV_ROOT="/root/.pyenv"
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"

    # Install Python 3.8.10 and set it globally
    pyenv install 3.12
    pyenv global 3.12

    # Upgrade pip and install Pipenv
    pip install --upgrade pip
    pip install pipenv

    # Clone your Git repository
    git clone https://github.com/simon-wilmes/rehabiliation-admission-scheduling.git /opt/rehabiliation-admission-scheduling

    # Navigate to the project directory
    cd /opt/rehabiliation-admission-scheduling

    # Install project dependencies using Pipenv
    pipenv install --deploy --system



    # Clean up
    rm -rf /opt/MiniZincIDE-2.5.5-bundle-linux-x86_64.tgz \
           /opt/gecode-release-6.2.0 \
           /opt/chuffed \
           /opt/or-tools

%environment
    # Set environment variables
    export TZ=Europe/Berlin
    export PATH="/root/.pyenv/bin:/root/.pyenv/shims:$PATH"
    export PYENV_ROOT="/root/.pyenv"
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"

%labels
    Author Simon Wilmes
    Version 1.0

%runscript
    exec "$@"
