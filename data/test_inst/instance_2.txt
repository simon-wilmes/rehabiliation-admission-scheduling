[INSTANCE]
num_beds: 9
workday_start: 8 # uhr
workday_end: 18 # uhr
day_start:0

even_scheduling_upper: 1.2
even_scheduling_lower: 0.8
even_scheduling_width: 5


horizon_length: 100

conflict_groups: []
# conflict groups is a list of sets where each set represents a single conflict group


[DATA: RESOURCE_GROUPS]: rgid, name
# "rgid" is of type int (must be unique)
# "name" is of type str
0; therapists
1; rooms


[DATA: RESOURCES]: rid, rgid, name, unavailable_time_slots
# "rid" is of type int (must be unique)
# "rgid" is of type int: refers to the rgid of a resource_group
# "name" is of type str
# "unavailable_time_slots" is of type: list[tuple[DayHour, DayHour, int | None]]
# where the syntax is the first entry says the start date, 
# the second entry is the end date of the unavailability 
# and the last entry is the interval of days of repetition, none if only once

0;  0;  therapist0; None #[(DayHour(day=0,hour=8),DayHour(day=0, hour=9), None)]
1;  0;  therapist1; None
2;  0;  therapist2; None
3;  1;  room3;  None

[DATA: TREATMENTS]: tid, num_participants, name, duration, resources
# "tid" is of type int (must be unique)
# "num_participants" is of type int
# "name" is of type str
# "duration" is of type Duration
# "resources" is of type dict[RGID, tuple[number_of_resources, requires_loyalty]]

0; 5; music_therapy; Duration(hours=0, minutes=45); {0:(1,False), 1: (1, False)}
1; 1; bath; Duration(hours=0, minutes=30); {1: (1, False)}
2; 2; trust_exercise; Duration(hours=0, minutes=30); {0: (1, False), 1: (1, False)}




[DATA: PATIENTS]: pid, name, treatments, length_of_stay, earliest_admission_date, admitted_before_date, already_admitted_date, already_resource_loyal, already_scheduled_treatments

# "pid" is of type int (must be unique)
# "name" is of type string (patient's name)
# "treatments" is a dictionary where keys are treatment IDs (int) and values are number of treatments required
# "length_of_stay" is of type int (total length of stay in days)
# "earliest_admission_date" is of type DayHour (earliest possible admission date)
# "admitted_before_date" is of type DayHour (latest possible admission date)
# "already_admitted" is of type bool and is true if the patient has been admitted in the past and therefore should be admitted in the model on the first day
# "already_resource_loyal" is a dictionary where the keys are (tuples) of treatment TID and RGID and values is a the list of RID that are loyal, this means that the list must have length of required resources of RGID for treatment TID
# "already_scheduled_treatments" is a list of tuples where each tuple contains a treatment ID (int) and the number of times it was already scheduled in the past

0; patient0; {0:5, 1:5, 2:4}; 7; DayHour(day=0, hour=0, minutes=0); DayHour(day=1, hour=0, minutes=0); False; {(0,0):[1]}; []
1; patient1; {1:8, 2:4}; 6; DayHour(day=1, hour=0, minutes=0); DayHour(day=5, hour=0, minutes=0); False; {}; []
2; patient2; {0:4, 2:12}; 8; DayHour(day=2, hour=0, minutes=0); DayHour(day=3, hour=0, minutes=0); False; {}; []

